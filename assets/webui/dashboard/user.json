{"title":"User Profile","appear":"$('#header .title').html(OF.page.title);","scrolling":true,"init":"$('body').addClass('textured');\n$('.button').pretouch();\n\n// Menu handling functions\nif (!OF.menu) {\n  OF.menu = function(buttonName) {\n    if      (buttonName == 'home')      OF.menu.home();\n    else if (buttonName == 'settings')  OF.menu.settings();\n    else if (buttonName == 'exit')      OF.menu.exit();\n    else {\n      OF.log('Unknown menu button hit: '+ buttonName);\n    }\n  };\n  \n  OF.menu.home = function() {\n    if (OF.navigationStack[0].url.match(/dashboard\\/user/)) {\n      OF.goBack({root:true});\n    } else {\n      OF.navigateToUrl(\"dashboard/user\", {\n        complete: function() {\n          OF.navigationStack = [OF.page];\n          OF.sendAction('back', {root:true});\n        }\n      });\n    }\n  };\n  \n  OF.menu.settings = function() {\n    OF.sendAction('openSettings');\n  };\n  \n  OF.menu.exit = function() {\n    OF.sendAction('dismiss');\n  };\n}\n\n// Base friends page functions\nif (!OF.friendsList) {\n  OF.friendsList = {\n    init: function() {\n      $.lazyLoad({\n        threshold: 0.5,  //percentage of the window height left to scroll that will trigger the next page\n        nextPageLoaded: function(page, data){ \n          if(page == 1) {\n            OF.friendsList.renderFriends(data);                 \n          } else {\n            OF.friendsList.addFriends(data);         \n          }\n        },\n        nextPageShouldLoad: function(page, callback) {\n          OF.api.request('/xp/friends', {\n            params: { user_id: OF.page.user.id, page:page, page_size:50 },\n            success: function(data){ callback(data.users, data.users.length < 50) },\n            failure: function(){ callback([]); }\n          });\n        },\n        isEmpty: function() { OF.friendsList.renderFriends([]); },\n        isFinished: function() { $(\"#loading\").hide(); }\n      });\n    },\n    \n    renderFriendItems: function(friends) {\n      var html = $.map(friends, function(friend) {\n       return tmpl('user_tmpl', friend);\n      });\n      return html;\n    },\n    \n    renderFriends : function(friends) {    \n      var html = OF.friendsList.renderFriendItems(friends);\n      \n      if (html.length > 0) {\n        $('#friends_list > ul').html(html.join('')).unhide();\n        $(\"#friends_list .no_data\").hide();\n      } else {\n        $('#friends_list > ul').hide();\n        $(\"#friends_list .no_data\").unhide();      \n      }\n    },\n    \n    addFriends : function(friends) {    \n      var html = OF.friendsList.renderFriendItems(friends);\n      $('#friends_list > ul').append(html.join(''));\n    }\n  };\n}\n\n// Go home on touching the logo area\n$('#home_button').touch(OF.menu.home);\n// Start a user object local to this page\nOF.page.user = OF.page.params.user || { id: OF.page.params.user_id || OF.user.id };\nvar isLocalUser = OF.page.user.id == OF.user.id;\n\nOF.page.setFriendsSubtitle = function(count, label) {\n  var val = count + ' ' + label + (count > 1 || count == 0 ? 's' : '')\n  $('li#friends .subtitle').text(val).unhide(); \n}\n\nOF.page.update = function() {\n  $('.game_name').html('Playing '+ OF.game.name);\n  $('.user_name').html(OF.page.user.name);\n  $('.user_score').html(OF.page.user.gamer_score);\n  \n  $('.user_score').removeClass('hidden');\n  \n  if (OF.page.user.profile_picture_url) {\n    // We need to use a timeout here because S3 can't process uploads fast enough\n    setTimeout(function() { $('.avatar').css('background-image', 'url('+ OF.page.user.profile_picture_url +')'); }, 500);\n  }\n  \n  OF.page.setFriendsSubtitle(OF.page.user.friendship_count || 0, \"Friend\");\n}\n    \nif (isLocalUser) {\n  // Header replacement\n  if ($('#header_replacement').length > 0) {\n    $('#header').remove();\n    $('#header_replacement').attr('id', 'header');\n  }\n  $('.playing').removeClass('hidden');\n\n  // Touching the avatar icon will open up the image picker\n  $('.avatar').touch(function() {\n    OF.sendAction('profilePicture');\n  })  \n\n  // The current game's information\n  OF.api.request('/xp/games/'+ OF.game.id, {\n    background: true,\n    success: function(data) {\n      // Display the leaderboard cell\n      if(data.game.leaderboards.total < 1) {\n        $('#leaderboards').hide();\n      }\n      // Display the achievements cell\n      if(data.game.achievements.total < 1) {\n        $('#achievements').hide();\n      }\n      if (!data.game.has_been_approved) {\n        $('#unapproved').removeClass('hidden').hide().slideDown();\n      }\n    }\n  });\n} else {\n  $('#leaderboards').hide();\n  $('#achievements').hide();\n  $('#header_replacement').remove();\n  $('#user_profile').addClass('other_user'); \n} \n  \n$('#add_friend').touch(function() {\n  OF.api.request('/xp/friend_requests', {\n    background: true,\n    method: 'POST',\n    params: { friend_id: OF.page.user.id }\n  });\n  $('#add_friend').hide();\n  $('#pending_friend').removeClass('hidden');\n});\n\n$('#remove_friend').touch(function() {\n  OF.api.request('/xp/friends/' + OF.page.user.id, {\n    background: true,\n    method: 'DELETE',\n  });\n  $('#remove_friend').hide();\n  $('#add_friend').removeClass('hidden');\n  \n  // Remove this user from the current users friends list.\n  var friends = [];\n  $.each(OF.user.friends, function() {\n    if (this.id != OF.page.user.id) {\n      friends.push(this);\n    }\n  });\n  OF.user.friends = friends;\n});\n\n$('#achievements').touch(function() {    \n  OF.navigateToUrl('dashboard/achievements', { params: { user: OF.page.user } });\n});\n\n// Games button\n$('#games').touch(function() {\n  OF.navigateToUrl('dashboard/games', { params: { user_id: OF.page.user.id, user_name: OF.page.user.name } });\n});\n\n// Friends button\n$('#friends').touch(function() {\n  if(isLocalUser) {\n    OF.navigateToUrl('dashboard/me/friends');            \n  } else {\n    OF.navigateToUrl('dashboard/friends', { params: { user: OF.page.user } });      \n  }\n});\n\n// Setup friend status management button\nif (!isLocalUser) {\n  OF.api.request('/xp/friends/status', {\n    background: true,\n    method: 'GET',\n    params: { id: OF.page.user.id },\n    success: function(data) {\n      var status = data.friendship.status;\n\n      if (status == 'friends') {\n        $('#remove_friend').unhide()\n      } else if (status == 'unrelated') {\n        $('#add_friend').unhide();\n      } else {\n        $('#pending_friend').unhide();\n      }\n    },\n  })\n}\n\n// Request the user\nOF.api.request('/xp/users/'+ OF.page.user.id, {\n  complete: function() {\n    $('#info_cell .loading').hide();\n  },\n  success: function(data) {\n    // Save the user locally\n    OF.page.user = data.user;\n    if (isLocalUser) {\n      OF.user = OF.page.user;\n    }\n          \n    // Update with user data\n    OF.page.update(); \n          \n    // Fill in achievements data\n    OF.api.request('/xp/users/' + OF.page.user.id + '/games/'+ OF.game.id +'/achievements', {\n      background: true,\n      failure: function() {},  // It's not critical this succeeds\n      success: function(data) {\n        var total    = data.achievements.length;\n        var unlocked = 0;\n        \n        $.each(data.achievements, function() {\n          if (this.achievement.is_unlocked) unlocked++;\n        });\n        \n        $('li#achievements .subtitle').text(unlocked +' out of '+ total +' unlocked').hide().fadeIn();                    \n      }\n    });\n    \n    // Users games\n    OF.api.request('/xp/users/'+ OF.page.user.id +'/games', {\n      background: true,\n      failure: function() {}, // It's not critical this succeeds\n      success: function(data) {\n        var gamesString  = data.games.length == 1 ? 'game' : 'games';\n        $('li#games .subtitle').text(data.games.length +' '+ gamesString).hide().fadeIn();\n      }\n    });\n    \n    if (isLocalUser) {\n      OF.api.request('/xp/friend_requests/total', {\n        background: true,\n        failure: function() {},\n        success: function(data) {\n          if (data.friend_requests.total > 0) {\n            OF.page.setFriendsSubtitle(data.friend_requests.total, \"Friend Request\");\n          }\n        }\n      });\n    }\n  }\n});","resume":"OF.page.update();","html":"<div id='dashboard'>\n<div id='header'>\n<span class='loading'>\n<span class='spinner'></span>\n</span>\n<div class='title' id='home_button'></div>\n</div>\n<div id='user_profile'>\n<div id='header_replacement'>\n<div id='home_button'></div>\n<span class='loading'>\n<span class='spinner'></span>\n<span class='text'>Loading...</span>\n</span>\n</div>\n<div class='user clearfix' id='info_cell'>\n<div class='loading'>\n<div class='spinner light'></div>\n</div>\n<div class='avatar'>\n<div class='overlay'></div>\n</div>\n<div class='user_name'>&nbsp;</div>\n<div class='playing hidden'>\n<span class='game_name'></span>\n</div>\n<div class='user_score hidden'></div>\n<div class='button hidden' id='add_friend'>Add Friend</div>\n<div class='button hidden' id='remove_friend'>Remove Friend</div>\n<div class='button disabled hidden' id='pending_friend'>Pending Friend</div>\n</div>\n<div class='hidden' id='unapproved'>\nThis game is under development.  Some Feint Dashboard features may not\nbe functional.\n</div>\n<ul class='cells'>\n<li data-href='dashboard/leaderboards' id='leaderboards'>\n<div class='icon'></div>\n<div class='title'>Leaderboards</div>\n<div class='subtitle'>See your scores</div>\n</li>\n<li id='achievements'>\n<div class='icon'></div>\n<div class='title'>Achievements</div>\n<div class='subtitle'></div>\n</li>\n<li id='games'>\n<div class='icon'></div>\n<div class='title'>Games</div>\n<div class='subtitle'></div>\n</li>\n<li id='friends'>\n<div class='icon'></div>\n<div class='title'>Friends</div>\n<div class='subtitle'></div>\n</li>\n</ul>\n</div>\n\n</div>\n"}